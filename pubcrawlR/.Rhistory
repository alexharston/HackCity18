library(httr)
library(lubridate)
source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyCQRLfT4Svbb0PoG9TKH_aPJiRO6FGSh2c'
set_key(key)
# Get stations
stations <- getStations()
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
# Text input box
selectizeInput('start', 'Pub crawl start location', stations$Name, selected = 'Camden Town Station'),
selectizeInput('end', 'Pub crawl end location', stations$Name, selected = 'Holborn Station'),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
library(shiny)
library(dplyr)
library(tidyr)
library(readr)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyCQRLfT4Svbb0PoG9TKH_aPJiRO6FGSh2c'
set_key(key)
# Get stations
stations <- getStations()
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
# Text input box
selectizeInput('start', 'Pub crawl start location', stations$Name, selected = 'Camden Town Station'),
selectizeInput('end', 'Pub crawl end location', stations$Name, selected = 'Holborn Station'),
actionButton('go', 'GO'),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
library(shiny)
library(dplyr)
library(tidyr)
library(readr)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyDK0rcvTeq4zig62iTFWSved_FfuKjX0xY'
set_key(key)
# Get stations
stations <- getStations()
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
# Text input box
selectizeInput('start', 'Pub crawl start location', stations$Name, selected = 'Camden Town Station'),
selectizeInput('end', 'Pub crawl end location', stations$Name, selected = 'Holborn Station'),
actionButton('go', 'GO'),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
y.start <- stations@coords[grep(stations$Name, pattern = 'Camden'), 1]
x.start <- stations@coords[grep(stations$Name, pattern = 'Camden'), 2]
y.end <- stations@coords[grep(stations$Name, pattern = 'Holborn'), 1]
x.end <- stations@coords[grep(stations$Name, pattern = 'Holborn'), 2]
df <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
pubs
library(shiny)
library(dplyr)
library(tidyr)
library(readr)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyDK0rcvTeq4zig62iTFWSved_FfuKjX0xY'
set_key(key)
# Get stations
stations <- getStations()
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
# Text input box
selectizeInput('start', 'Pub crawl start location', stations$Name, selected = 'Camden Town Station'),
selectizeInput('end', 'Pub crawl end location', stations$Name, selected = 'Holborn Station'),
actionButton('go', 'GO'),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
server <- function(input, output, session){
# Define default stations
y.start <- stations@coords[grep(stations$Name, pattern = 'Camden'), 1]
x.start <- stations@coords[grep(stations$Name, pattern = 'Camden'), 2]
y.end <- stations@coords[grep(stations$Name, pattern = 'Holborn'), 1]
x.end <- stations@coords[grep(stations$Name, pattern = 'Holborn'), 2]
df <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
output$map <- renderGoogle_map({
google_map(data = pubs, search_box = F) %>%
add_markers(lat = 'lat', lon = 'lng', info_window = 'pub_name') %>%
add_polylines(data = df, id = 'poly', polyline = 'polyline', stroke_weight = 9)
#  add_drawing(drawing_modes = c('rectangle'))
})
#
observeEvent(input$go, {
y.start <- stations@coords[stations$Name == input$start, 1]
x.start <- stations@coords[stations$Name == input$start, 2]
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
df.updated <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
print(pubs)
google_map_update(map_id = 'map')
})
observeEvent(input$go, {
y.end <- stations@coords[stations$Name == input$end, 1]
x.end <- stations@coords[stations$Name == input$end, 2]
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
df.updated <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
google_map_update(map_id = 'map')
})
## Test case
## Start location
#x.start <- 51.534186
#y.start <- -0.138886
#
## End location
#x.end <- 51.517647
#y.end <- -0.119974
}
library(shiny)
library(dplyr)
library(tidyr)
library(readr)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
library(shiny)
library(dplyr)
library(tidyr)
library(readr)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyDK0rcvTeq4zig62iTFWSved_FfuKjX0xY'
set_key(key)
# Get stations
stations <- getStations()
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
# Text input box
selectizeInput('start', 'Pub crawl start location', stations$Name, selected = 'Camden Town Station'),
selectizeInput('end', 'Pub crawl end location', stations$Name, selected = 'Holborn Station'),
actionButton('go', 'GO'),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
source('./R/pubFinder.R')
# Get stations
stations <- getStations()
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
# Text input box
selectizeInput('start', 'Pub crawl start location', stations$Name, selected = 'Camden Town Station'),
selectizeInput('end', 'Pub crawl end location', stations$Name, selected = 'Holborn Station'),
actionButton('go', 'GO'),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
stations <- getStations()
library(shiny)
library(dplyr)
library(tidyr)
library(readr)
library(rgdal)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyDK0rcvTeq4zig62iTFWSved_FfuKjX0xY'
set_key(key)
# Get stations
stations <- getStations()
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
# Text input box
selectizeInput('start', 'Pub crawl start location', stations$Name, selected = 'Camden Town Station'),
selectizeInput('end', 'Pub crawl end location', stations$Name, selected = 'Holborn Station'),
actionButton('go', 'GO'),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
