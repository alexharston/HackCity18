@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
server <- function(input, output, session){
source("R/getCrime.R")
source("R/getRoute.R")
source("R/wrapper.R")
# Test case
# Start location
x.start <- 51.534186
y.start <- -0.138886
# End location
x.end <- 51.517647
y.end <- -0.119974
df <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
google.polyline <- SelectPubsAndGetRoute(pubs = pubs,
start.coord = start.coord,
end.coord = end.coord,
number_pints = 5,
safe = "safe")
# Define API key
key <- 'AIzaSyCidFr8iYBBvsMPbal07w_PUuN6Xa0uEOA'
output$map <- renderGoogle_map({
google_map(data = pubs, search_box = F) %>%
add_markers(lat = 'lat', lon = 'lng', info_window = 'pub_name') %>%
add_polylines(data = df, polyline = google.polyline$polyline, stroke_weight = 9)
#add_drawing(drawing_modes = c('circle'))
})
observeEvent(input$map_map_click, {
print(input$map_map_click)
})
}
runApp()
install.packages("shinysky")
library(shinysky)
runApp()
server <- function(input, output, session){
source("R/getCrime.R")
source("R/getRoute.R")
source("R/wrapper.R")
# Test case
# Start location
x.start <- 51.534186
y.start <- -0.138886
# End location
x.end <- 51.517647
y.end <- -0.119974
df <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
google.polyline <- SelectPubsAndGetRoute(pubs = pubs,
start.coord = start.coord,
end.coord = end.coord,
number_pints = 5,
safe = "safe")
# Define API key
key <- 'AIzaSyCidFr8iYBBvsMPbal07w_PUuN6Xa0uEOA'
output$map <- renderGoogle_map({
google_map(data = pubs, search_box = F) %>%
add_markers(lat = 'lat', lon = 'lng', info_window = 'pub_name') %>%
add_polylines(data = df, polyline = google.polyline$polyline, stroke_weight = 9)
#add_drawing(drawing_modes = c('circle'))
})
observeEvent(input$map_map_click, {
print(input$map_map_click)
})
}
library(shiny)
# library(shinysky)
library(dplyr)
library(tidyr)
# library(readr)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyAa55bTPXC1akgwWNm61KT43AsmwI9NZuY'
set_key(key)
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
runApp()
server <- function(input, output, session){
library(data.table)
source("R/getCrime.R")
source("R/getRoute.R")
source("R/wrapper.R")
# Test case
# Start location
x.start <- 51.534186
y.start <- -0.138886
# End location
x.end <- 51.517647
y.end <- -0.119974
df <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
google.polyline <- SelectPubsAndGetRoute(pubs = pubs,
start.coord = start.coord,
end.coord = end.coord,
number_pints = 5,
safe = "safe")
# Define API key
key <- 'AIzaSyCidFr8iYBBvsMPbal07w_PUuN6Xa0uEOA'
output$map <- renderGoogle_map({
google_map(data = pubs, search_box = F) %>%
add_markers(lat = 'lat', lon = 'lng', info_window = 'pub_name') %>%
add_polylines(data = df, polyline = google.polyline$polyline, stroke_weight = 9)
#add_drawing(drawing_modes = c('circle'))
})
observeEvent(input$map_map_click, {
print(input$map_map_click)
})
}
library(shiny)
# library(shinysky)
library(dplyr)
library(tidyr)
# library(readr)
library(data.table)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyAa55bTPXC1akgwWNm61KT43AsmwI9NZuY'
set_key(key)
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
server <- function(input, output, session) {
library(data.table)
source("R/getCrime.R")
source("R/getRoute.R")
source("R/wrapper.R")
source("R/pubFinder.R")
# Define API key
# key <- 'AIzaSyBBm8BH5k410AQ9lr6Rm1HrYyyI8X-gULI'
# Test case
# Start location
x.start <- 51.534186
y.start <- -0.138886
# End location
x.end <- 51.517647
y.end <- -0.119974
start.coord <- c(x.start, y.start)
end.coord <- c(x.end, y.end)
# Get list of pubs
# df <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
# Get list of a) selected pubs and b) polyline for GoogleMaps
google.polyline <- SelectPubsAndGetRoute(pubs = pubs,
start.coord = start.coord,
end.coord = end.coord,
number_pints = 5,
safe = "safe",
api_key = key)
# print(google.polyline$polyline)
# library(sf)
output$map <- renderGoogle_map({
google_map(key = key, data = google.polyline$selectedpubs, search_box = F) %>%
add_markers(lat = 'lat', lon = 'lng', info_window = 'pub_name') %>%
add_polylines(data = df, polyline = google.polyline$polyline$points, stroke_weight = 9)
# add_drawing(drawing_modes = c('circle'))
})
observeEvent(input$map_map_click, {
print(input$map_map_click)
})
}
library(shiny)
# library(shinysky)
library(dplyr)
library(tidyr)
# library(readr)
library(data.table)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
# source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyCVHKD81q7hEu_pAIOtJ50uzaE5GbAfNoA'
set_key(key)
ui <- fluidPage(
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-weight: 300;
line-height: 1.1;
color: #3498db;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:32pt;
font-weight:300;
color: white;
text-align: center;
}
body {
background-color: #f1c40f;
}
"))
),
# titlePanel('pubcRawl'),
headerPanel("PubBrawl"),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("button", "Come at me mate"),
actionButton("button", "No"),
actionButton("button", "I literally don't care"),
tags$div(
tags$p("Do you want to have a quality time?")
),
actionButton("button", "Yes"),
actionButton("button", "No"),
# Input: Simple integer interval ----
sliderInput("integer", "How many pubs?",
min = 2, max = 10,
value = 1),
google_mapOutput(outputId = "map", height = "600px", width="80%")
)
)
)
shinyApp(ui, server)
server <- function(input, output, session) {
library(data.table)
source("R/getCrime.R")
source("R/getRoute.R")
source("R/wrapper.R")
source("R/pubFinder.R")
# Define API key
# key <- 'AIzaSyBBm8BH5k410AQ9lr6Rm1HrYyyI8X-gULI'
# Test case
# Start location
x.start <- 51.534186
y.start <- -0.138886
# End location
x.end <- 51.517647
y.end <- -0.119974
start.coord <- c(x.start, y.start)
end.coord <- c(x.end, y.end)
sliderValues <- reactive({
data.frame(
Name = c( "NumberPints",
"GoogleReview" ),
Value = as.character( c( input$number_pints,
input$google_review ) ),
stringsAsFactors = FALSE)
})
# Show the values in an HTML table ----
output$values <- renderTable({
sliderValues()
})
safety <- reactiveValues(data = NULL)
observeEvent(input$unsafe, {
safety  <- "unsafe"
})
observeEvent(input$safe, {
safety  <- "safe"
})
observeEvent(input$carefree, {
safety  <- "carefree"
})
# Get list of pubs
# df <- data.frame(id = 1, polyline = encode_pl(lat = c(x.start, x.end), lon = c(y.start, y.end)))
pubs <- findPubs(x.start, y.start, x.end, y.end, key)
# Get list of a) selected pubs and b) polyline for GoogleMaps
google.polyline <- SelectPubsAndGetRoute(pubs = pubs,
start.coord = start.coord,
end.coord = end.coord,
number_pints = 5,
safe = "safe",
api_key = key)
# print(google.polyline$polyline)
# library(sf)
output$map <- renderGoogle_map({
google_map(key = key, data = google.polyline$selectedpubs, search_box = F) %>%
add_markers(lat = 'lat', lon = 'lng', info_window = 'pub_name') %>%
add_polylines(data = df, polyline = google.polyline$polyline$points, stroke_weight = 9)
# add_drawing(drawing_modes = c('circle'))
})
observeEvent(input$map_map_click, {
print(input$map_map_click)
})
}
library(shiny)
# library(shinysky)
library(dplyr)
library(tidyr)
# library(readr)
library(data.table)
library(googleway)
library(geosphere)
library(getopt)
library(jsonlite)
library(httr)
library(lubridate)
library(shinythemes)
# source('./R/pubFinder.R')
source('./server.R')
# Define API key
key <- 'AIzaSyCVHKD81q7hEu_pAIOtJ50uzaE5GbAfNoA'
set_key(key)
ui <- fluidPage(
theme = shinytheme("united"),
fluidRow(
column(12, align="center",
tags$head(
tags$style(HTML("
@import url('https://fonts.googleapis.com/css?family=Lobster');
h1 {
font-family: 'Lobster', Arial, cursive;
font-size: 48;
font-weight: 300;
line-height: 1.1;
color: #08589e;
text-align: center;
}
p {
font-family: Roboto, sans-serif;
font-size:16pt;
font-weight:600;
color: #08589e;
text-align: center;
}
body {
background-color: #fef0d9;
}
"))
),
# titlePanel('pubcRawl')
headerPanel("PubBrawl"),
br(),
br(),
tags$div(
tags$p("How many stops?")
),
sliderInput("number_pints", "",
min = 0, max = 10,
value = 5),
br(),
br(),
tags$div(
tags$p("Palaces or gutters?")
),
sliderInput("google_review", "",
min = 0, max = 5,
value = 3.5, step = 0.1),
br(),
br(),
tags$div(
tags$p("Do you want to get into a fight?")
),
actionButton("unsafe", "Come at me mate"),
actionButton("safe", "Nah, play it safe"),
actionButton("carefree", "Whatever I'm easy"),
br(),
br(),
google_mapOutput(outputId = "map", height = "600px", width="80%"),
br(),
br(),
submitButton("Update View", icon("refresh")),
br(),
br()
)
)
)
shinyApp(ui, server)
